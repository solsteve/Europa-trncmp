#/ ====================================================================== BEGIN FILE =====
#/ **                                       F G A                                       **
#/ =======================================================================================
import numpy.random as rnd
import sys
from Flib import Flib

#/ =======================================================================================
def scorePop(pop):
    #/ -------------------------------------------------------------------------------
    np = len(pop)
    for i in range(np):
        self.pop[i].measure()

#/ =======================================================================================
def select(pop,ts):
    #/ -------------------------------------------------------------------------------
    np = len(pop)
    a  = rnd.randint(np)
    for i in range(ts):
        r  = rnd.randint(np)
        if ( pop[r].score > pop[a].score ):
            a = r
    return a

#/ =======================================================================================
def cross(par1, par2):
    #/ -------------------------------------------------------------------------------
    p1 = par1.toParam()
    p2 = par2.toParam()
    np = len(p1)
    cut = rnd.randint(np)
    c1 = []
    c2 = []
    if ( cut > 0 ):
        for i in range(cut):
            c1.append(p1[i])
            c2.append(p2[i])
    if ( cut < np ):
        for i in range(cut,np):
            c1.append(p2[i])
            c2.append(p1[i])
            child1 = Flib()
            child1.fromParam(c1)
            child2 = Flib()
            child2.fromParam(c2)
    return (child1, child2)

    #/ =======================================================================================
class FGA:
    #/ -----------------------------------------------------------------------------------
    def __init__(self,np,order):
        #/ -------------------------------------------------------------------------------
        self.nPop = np
        self.popA = []
        for i in range(self.nPop):
            self.popA.append( Flib(order) )

    #/ ===================================================================================
    def step( pop, pcross, pmutate ):
        #/ -------------------------------------------------------------------------------

        scorePop(pop)

        tempPop = []
        for i in range(0,self.nPop,2)
        
