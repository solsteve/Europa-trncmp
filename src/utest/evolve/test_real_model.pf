module test_real_model
  use pfunit_mod
  use real_model_mod
  use test_models
  implicit none

  
contains

  
  @test
  !/ =====================================================================================
  subroutine test_build
    !/ -----------------------------------------------------------------------------------
    implicit none
    !/ -----------------------------------------------------------------------------------

    type(Sphere) :: model

    call model%build( 3 )
    
    @assertEqual( 3, model%nPar() )
    @assertEqual( 1, model%nMet() )
    
  end subroutine test_build

  @test
  !/ =====================================================================================
  subroutine test_exec
    !/ -----------------------------------------------------------------------------------
    implicit none
    !/ -----------------------------------------------------------------------------------
    real(dp), parameter :: p(3) = [ 1.1d0, 3.4d0, 2.3d0 ]
    real(dp) :: s(1)

    type(Sphere) :: model
    
    call model%build( 3 )
    
    @assertEqual( 3, model%nPar() )
    @assertEqual( 1, model%nMet() )

    call model%evaluate( s, p )

    @assertEqual( 18.06d4, s(1) )

    !call model%display( UNIT=OUTPUT_UNIT )
    !call model%display( FMT='F5.2', PARAM=p )
    !call model%display( FMT='F5.2', PARAM=p, MFMT='ES11.4' )
   
  end subroutine test_exec

  
   @test
  !/ =====================================================================================
  subroutine test_eval
    !/ -----------------------------------------------------------------------------------
    implicit none
    !/ -----------------------------------------------------------------------------------
    real(dp) :: a1(2), b1(2)
    type(Sphere) :: model

    a1(1) = 3.5d0
    b1(1) = 4.7d0

    @assertTrue( model%isLeftBetter( a1, b1 ) )
    @assertTrue( .not. model%isLeftBetter( b1, a1 ) )

  end subroutine test_eval

  
end module test_real_model
